# Basic template exmple of setting up CI pipeline with GitHub actions

name: DC Motor Controller Verification

on: 
    # Triggers the workflow only when changes are directly made to the main branch, or when a pull request is made to the main branch
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
  
  basic-connectionTest-job:
    name: Simple display command to confirm the pipelines are correctly setup
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
      - name: Run commands
        uses: matlab-actions/run-command@v1
        with:
          command: disp('CI Workflow up and running!')

  my-check-job:
    name: Check Simulink Models for MISRA C Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
      - name: Run commands
        uses: matlab-actions/run-command@v1
        with:
          command: status=license('checkout','sl_verification_validation'); javaVer=version('-java'); if (status~=1 || isempty(javaVer)) disp('No Checks - SlCheck License Missing'); else openProject('DCMtrCtrl.prj'); runProjectChecks; end

  my-test-job:
    name: Test Simulink Models with Simulink test - MiL only
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
      - name: Run tests and generate artifacts
        uses: matlab-actions/run-tests@v1
        with:
          test-results-pdf: GeneratedArtifacts/TestResults/dcmtr_PIDCtrl_testResults.pdf
          test-results-junit: GeneratedArtifacts/TestResults/dcmtr_PIDCtrl_testResults.xml
          code-coverage-cobertura: GeneratedArtifacts/TestResults/dcmtr_PIDCtrl_coverage.xml
